@use "action" as action;
@use "child" as child;

$__colorLimit: 30;
$__builtin: (
  error: rgb(205, 0, 41),
  success: rgb(0, 198, 0),
  info: rgb(0, 210, 210),
  warning: orange,
  white: white,
  black: rgb(59, 59, 59),
);

@mixin root($n, $v) {
  --#{$n}: #{$v};

  @for $i from 1 through 3 {
    --#{$n}-#{$i}: #{darken($v, $__colorLimit / $i * 1%)};
    --#{$n}-#{$i+3}: #{lighten($v, $i * $__colorLimit / 3 * 1%)};
  }
}

@mixin class($cn) {
  // Color
  @include action.create($cn);
  @include child.create($cn);

  .#{$cn} {
    color: var(--#{$cn});
  }

  // Background Color
  @include action.create(bg-#{$cn});
  @include child.create(bg-#{$cn});
  .bg-#{$cn} {
    background-color: var(--#{$cn});
  }

  // Border Color
  @include action.create(br-#{$cn});
  @include child.create(br-#{$cn});
  .br-#{$cn} {
    border-color: var(--#{$cn});
  }

  @for $i from 1 through 6 {
    $ccn: #{$cn}-#{$i};

    @include action.create($ccn);
    @include child.create($ccn);

    .#{$ccn} {
      color: var(--#{$ccn});
    }

    @include action.create(bg-#{$ccn});
    @include child.create(bg-#{$ccn});
    .bg-#{$ccn} {
      background-color: var(--#{$ccn});
    }

    // Border Colors
    @include action.create(br-#{$ccn});
    @include child.create(br-#{$ccn});
    .br-#{$ccn} {
      border-color: var(--#{$ccn});
    }

    // Border side colors
    @each $k, $v in () {
      @include action.create(br-#{$ccn});
      @include child.create(br-#{$ccn});
      .br#{$k}-#{$ccn} {
        border-#{$v}-color: var(--#{$ccn});
      }
    }
  }
}

@mixin builtinRoot() {
  @each $k, $v in $__builtin {
    @include root($k, $v);
  }
}

@mixin builtinClass() {
  @each $k, $v in $__builtin {
    @include class($k);
  }
}
